<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lxhrainy.myjz.admin.task.dao.IComplainInfoDao">
    
	<sql id="basicColumns">
		T.id AS "id",
		T.sellerid AS "seller.id",
		T.createuser AS "createuser.id",
		T.createtime AS "createtime",
		T.taskid AS "task.id",
		T.complaintype AS "complaintype.id",
		T.content AS "content",
		T.proveimage AS "proveimage",
		T.status AS "status",
		T.audituser AS "audituser.id",
		T.audittime AS "audittime"
	</sql>
	
	<sql id="basicJoins">
	</sql>
    
    <sql id="where">
		<if test="condition!=null">
			<where>
				<if test="condition.model!=null">
				</if>
			</where>
		</if>
	</sql>
	
	<select id="getById" resultType="ComplainInfo">
		SELECT 
			<include refid="basicColumns"/>
		FROM complain_info T
		<include refid="basicJoins"/>
		WHERE T.id = #{id}
	</select>
	
	<select id="findListByPage" resultType="ComplainInfo">
		SELECT 
			<include refid="basicColumns"/>
		FROM complain_info T
		<include refid="basicJoins"/>
		<include refid="where"/>
		order by T.ID DESC
			<include refid="Sql.pager" />
	</select>
	
	<select id="findAllList" resultType="ComplainInfo">
		SELECT 
			<include refid="basicColumns"/>
		FROM complain_info a
		<include refid="basicJoins"/>
		<include refid="where"/>
	</select>
	
	<select id="getCountByCondition" resultType="int">
		SELECT 
			COUNT(1)
		FROM complain_info T
		<include refid="basicJoins"/>
		<include refid="where"/>
	</select>
	
	<insert id="insert">
		INSERT INTO complain_info(
			id,
			<if test="seller != null and seller.id != null">
			sellerid,
			</if>
			<if test="createuser != null and createuser.id != null">
			createuser,
			</if>
			createtime,
			<if test="task != null and task.id != null">
			taskid,
			</if>
			complaintype,
			content,
			proveimage,
			status,
			<if test="audituser != null and audituser.id != null">
			audituser,
			</if>
			audittime
		) VALUES (
			#{id},
			<if test="seller != null and seller.id != null">
			#{seller.id},
			</if>
			<if test="createuser != null and createuser.id != null">
			#{createuser.id},
			</if>
			#{createtime},
			<if test="task != null and task.id != null">
			#{task.id},
			</if>
			#{complaintype.id},
			#{content},
			#{proveimage},
			#{status},
			<if test="audituser != null and audituser.id != null">
			#{audituser.id},
			</if>
			#{audittime}
		)
	</insert>
	
	<update id="update">
		UPDATE complain_info
		<set>	
			<if test="seller != null and seller.id != null">
			sellerid = #{seller.id},
			</if>
			<if test="createuser != null and createuser.id != null">
			createuser = #{createuser.id},
			</if>
			<if test="createtime != null">
			createtime = #{createtime},
			</if>
			<if test="task != null and task.id != null">
			taskid = #{task.id},
			</if>
			<if test="complaintype != null and complaintype.id != null">
			complaintype = #{complaintype.id},
			</if>
			<if test="content != null">
			content = #{content},
			</if>
			<if test="proveimage != null">
			proveimage = #{proveimage},
			</if>
			<if test="status != null">
			status = #{status},
			</if>
			<if test="audituser != null and audituser.id != null">
			audituser = #{audituser.id},
			</if>
			<if test="audittime != null">
			audittime = #{audittime},
			</if>
		</set> 
		WHERE id = #{id}
	</update>
	
	<update id="deleteById">
		DELETE FROM complain_info
		WHERE id = #{id}
	</update>
	
	<select id="getListForMobile" resultType="ComplainInfo">
		SELECT 
			T.id AS "id",
			T.sellerid AS "seller.id",
			T.taskid AS "task.id",
			T.complaintype AS "complaintype.id",
			T.content AS "content",
			T.proveimage AS "proveimage",
			T.status AS "status",
			T.createtime,
			UI.username AS "seller.username",
			OI.targetsubtype AS "task.targetsubtype"
		FROM complain_info T
		LEFT JOIN order_info OI on OI.id = T.taskid
		LEFT JOIN user_info UI on UI.id = T.sellerid
		<if test="condition!=null">
			<where>
				<if test="condition.model != null">
					<if test="condition.model.createuser != null and condition.model.createuser.id != null">
						AND T.createuser = #{condition.model.createuser.id}
					</if>
					<if test="condition.model.seller != null and condition.model.seller.id != null">
						AND T.sellerid = #{condition.model.seller.id}
					</if>
				</if>
				<if test="condition.offsetid != null">
					AND T.id &lt; #{condition.offsetid}
				</if>
			</where>
		order by T.id desc
		limit 0,${condition.count}
		</if>
	</select>
</mapper>