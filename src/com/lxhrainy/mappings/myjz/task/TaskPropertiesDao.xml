<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lxhrainy.myjz.admin.task.dao.ITaskPropertiesDao">
    
    <resultMap id="propertiesResult" type="TaskProperties">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="status" column="status" />
		<result property="type" column="type" />
		<result property="price" column="price" />
		<result property="elementtype" column="elementtype" />
		<result property="elementnum" column="elementnum" />
		<result property="needtype" column="needtype" />
		<result property="neednum" column="neednum" />
		<result property="sort" column="sort" />
		<result property="elementname" column="elementname" />
		<result property="parent.id" column="parent.id" />
		<collection property="valueList" ofType="TaskPropertiesValue">
			<id property="id" column="valueList.id" />
			<id property="label" column="valueList.label" />
			<id property="keyvalue" column="valueList.keyvalue" />
			<id property="memo" column="valueList.memo" />
			<id property="isdefault" column="valueList.isdefault" />
			<id property="func" column="valueList.func" />
		</collection>
	</resultMap>
	
	<sql id="taskPropertiesColumns">
		T.id AS "id",
		T.name AS "name",
		T.status AS "status",
		T.type AS "type",
		T.price AS "price",
		T.elementtype AS "elementtype",
		T.elementnum AS "elementnum",
		T.needtype AS "needtype",
		T.neednum AS "neednum",
		T.sort AS "sort",
		T.elementname AS "elementname",
		T.parentid AS "parent.id"
	</sql>
	
	<sql id="propertiesValueColumns">
		T.id AS "id",
		T.name AS "name",
		T.status AS "status",
		T.type AS "type",
		T.price AS "price",
		T.elementtype AS "elementtype",
		T.elementnum AS "elementnum",
		T.needtype AS "needtype",
		T.neednum AS "neednum",
		T.sort AS "sort",
		T.elementname AS "elementname",
		T.parentid AS "parent.id",
		
		V.id AS "valueList.id",
		V.label AS "valueList.label",
		V.keyvalue AS "valueList.keyvalue",
		V.memo AS "valueList.memo",
		V.isdefault AS "valueList.isdefault",
		V.func AS "valueList.func"
	</sql>
	
	<sql id="taskPropertiesJoins">
	</sql>
	
	<sql id="propertiesValueJoins">
		LEFT JOIN task_properties_value V ON V.propertiesid = T.id
	</sql>
	
    <sql id="where">
		<if test="condition!=null">
			<where>
				<if test="condition.model!=null">
					<if test="condition.model.name!=null and condition.model.name!=''">
						AND T.elementname LIKE '%${condition.model.name}%'
					</if>
					<if test="condition.model.elementtype!=null and condition.model.elementtype!=''">
						AND T.elementtype = #{condition.model.elementtype}
					</if>
					<if test="condition.model.type!=null">
						AND T.type = #{condition.model.type}
					</if>
				</if>
			</where>
		</if>
	</sql>
	
	<select id="getById" resultType="TaskProperties">
		SELECT 
			<include refid="taskPropertiesColumns"/>
		FROM task_properties T
		<include refid="taskPropertiesJoins"/>
		WHERE T.id = #{id}
	</select>
	
	<select id="getListByPid" resultType="TaskProperties">
		SELECT 
			<include refid="taskPropertiesColumns"/>
		FROM task_properties T
		WHERE T.parentid = #{pid}
	</select>
	
	<select id="getListSimpleChoose" resultType="TaskProperties">
		SELECT 
			<include refid="taskPropertiesColumns"/>
		FROM task_properties T
		WHERE T.parentid = -1
		AND (T.elementtype = 'select' OR T.elementtype = 'radio')
	</select>
	
	<select id="findListByPage" resultType="TaskProperties">
		SELECT 
			<include refid="taskPropertiesColumns"/>
		FROM task_properties T
		<include refid="taskPropertiesJoins"/>
		<include refid="where"/>
		order by T.ID DESC
			<include refid="Sql.pager" />
	</select>
	
	<!-- 获取顶级属性(完整：带值列表)列表 -->
	<select id="getAllWithValuelist" resultMap="propertiesResult">
		SELECT 
			<include refid="propertiesValueColumns"/>
		FROM task_properties T
		<include refid="propertiesValueJoins"/>
		WHERE parentid = -1
	</select>
	
	<select id="findAllList" resultType="TaskProperties">
		SELECT 
			<include refid="taskPropertiesColumns"/>
		FROM task_properties T
		<include refid="taskPropertiesJoins"/>
		<include refid="where"/>
	</select>
	
	<select id="getCountByCondition" resultType="int">
		SELECT 
			COUNT(1)
		FROM task_properties T
		<include refid="taskPropertiesJoins"/>
		<include refid="where"/>
	</select>
	
	<select id="getCountByName" resultType="int">
		SELECT 
			COUNT(1)
		FROM task_properties T
		WHERE
			T.name = #{name}
	</select>
	
	<!-- 获取非指定id的同名个数 -->
	<select id="getCountByOtherName" resultType="int">
		SELECT 
			COUNT(1)
		FROM task_properties T
		WHERE
			T.name = #{name}
			AND T.id != #{id}
	</select>
	
	<insert id="insert">
		INSERT INTO task_properties(
			id,
			name,
			status,
			type,
			price,
			elementtype,
			elementnum,
			needtype,
			neednum,
			sort,
			elementname,
			parentid,
			valueid
		) VALUES (
			#{id},
			#{name},
			#{status},
			#{type},
			#{price},
			#{elementtype},
			#{elementnum},
			#{needtype},
			#{neednum},
			#{sort},
			#{elementname},
			#{parent.id},
			#{belongValue.id}
		)
	</insert>
	
	<update id="update">
		UPDATE task_properties SET 	
			name = #{name},
			status = #{status},
			type = #{type},
			price = #{price},
			elementtype = #{elementtype},
			elementnum = #{elementnum},
			needtype = #{needtype},
			neednum = #{neednum},
			sort = #{sort},
			elementname = #{elementname},
			parentid = #{parent.id},
			valueid = #{belongValue.id}
		WHERE id = #{id}
	</update>
	
	<update id="deleteById">
		DELETE FROM task_properties
		WHERE id = #{id}
	</update>
	
</mapper>