<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lxhrainy.myjz.admin.buyer.dao.IAccountInfoDao">
    
	<sql id="buyerAccountInfoColumns">
		T.id AS "id",
		T.accountno AS "accountno",
		T.identification AS "identification",
		T.credit AS "credit",
		T.level AS "level.id",
		T.levelpic AS "levelpic",
		T.receivednum AS "receivednum",
		T.auditstatus AS "auditstatus",
		T.status AS "status",
		T.sort AS "sort",
		T.createtime AS "createtime",
		T.createuser AS "createuser.id",
		T.audituser AS "audituser.id",
		T.audittime AS "audittime",
		
		L.icon AS "level.icon",
		L.iconnum AS "level.iconnum",
		L.name AS "level.name"
	</sql>
	
	<sql id="buyerAccountInfoJoins">
		LEFT JOIN basic_level_info L ON L.id = T.level
	</sql>
    
    <sql id="where">
		<if test="condition!=null">
			<where>
				1 = 1
				<if test="condition.model!=null">
					<if test="condition.model.createuser!=null and condition.model.createuser.id!=null">
						AND T.createuser = #{condition.model.createuser.id}
					</if>
				</if>
			</where>
		</if>
	</sql>
	
	<select id="getById" resultType="AccountInfo">
		SELECT 
			<include refid="buyerAccountInfoColumns"/>
		FROM buyer_account_info T
		<include refid="buyerAccountInfoJoins"/>
		WHERE T.id = #{id}
	</select>
	
	<select id="findListByPage" resultType="AccountInfo">
		SELECT 
			<include refid="buyerAccountInfoColumns"/>
		FROM buyer_account_info T
		<include refid="buyerAccountInfoJoins"/>
		<include refid="where"/>
		order by T.ID
			<include refid="Sql.pager" />
	</select>
	
	<select id="findAllList" resultType="AccountInfo">
		SELECT 
			<include refid="buyerAccountInfoColumns"/>
		FROM buyer_account_info T
		<include refid="buyerAccountInfoJoins"/>
		<include refid="where"/>
	</select>
	
	<select id="getCountByCondition" resultType="int">
		SELECT 
			COUNT(1)
		FROM buyer_account_info T
		<include refid="buyerAccountInfoJoins"/>
		<include refid="where"/>
	</select>
	
	<insert id="insert">
		INSERT INTO buyer_account_info(
			id,
			accountno,
			identification,
			credit,
			level,
			levelpic,
			receivednum,
			auditstatus,
			status,
			sort,
			createtime,
			createuser,
			audituser,
			audittime
		) VALUES (
			#{id},
			#{accountno},
			#{identification},
			#{credit},
			#{level.id},
			#{levelpic},
			#{receivednum},
			#{auditstatus},
			#{status},
			#{sort},
			#{createtime},
			#{createuser.id},
			#{audituser.id},
			#{audittime}
		)
	</insert>
	
	<update id="update">
		UPDATE buyer_account_info SET 	
			accountno = #{accountno},
			identification = #{identification},
			credit = #{credit},
			level = #{level.id},
			levelpic = #{levelpic},
			receivednum = #{receivednum},
			auditstatus = #{auditstatus},
			status = #{status},
			sort = #{sort},
			createtime = #{createtime},
			createuser = #{createuser.id},
			audituser = #{audituser.id},
			audittime = #{audittime}
		WHERE id = #{id}
	</update>
	
	<update id="updateStatus">
		UPDATE buyer_account_info
		SET status = #{status}
		WHERE id = #{id}
	</update>
	
	<update id="updateSort">
		UPDATE buyer_account_info
		SET sort = #{sort}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM buyer_account_info
		WHERE id = #{id}
	</update>
	
	<!-- 手机端获取买号列表 -->
	<select id="getListForMobile" resultType="AccountInfo">
		SELECT 
			<include refid="buyerAccountInfoColumns"/>
		FROM buyer_account_info T
			<include refid="buyerAccountInfoJoins"/>
		<if test="condition!=null">
			<where>
				<if test="condition.model != null">
					<if test="condition.model.user != null">
						<if test="condition.model.user.id != null">
							AND T.userid = #{condition.model.user.id}
						</if>
					</if>
				</if>
				<if test="condition.offsetid != null">
					AND T.id &lt; #{condition.offsetid}
				</if>
			</where>
		order by T.id desc
		limit 0,${condition.count}
		</if>
	</select>
	
</mapper>