<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lxhrainy.myjz.admin.activity.dao.IActivityDeductionUserDao">
    
    <resultMap id="ActivityDeductionUser" type="com.lxhrainy.myjz.admin.activity.model.ActivityDeductionUser">
		 <id column="id" property="id"  />
	    <result column="activityDeduction.id" property="activityDeduction.id"  />
	    <result column="applyuserid.id" property="applyuserid.id"  />
	    <result column="applyuserid.username" property="applyuserid.username"  />
	    <result column="applytime" property="applytime"  />
	    <result column="status" property="status"  />
	    <result column="userid.id" property="userid.id"  />
	    <result column="userid.username" property="userid.username"  />
	    <result column="usetime" property="usetime"  />
	    <result column="couponpassword" property="couponpassword"  />
	    <result column="deleted" property="deleted"  />
	    <result column="activityDeduction.housesInfo.name" property="activityDeduction.housesInfo.name"/>
	    <result column="activityDeduction.availabletime" property="activityDeduction.availabletime"/>
	    <result column="activityDeduction.prestoremoney" property="activityDeduction.prestoremoney"/>
	    <result column="activityDeduction.deductionmoney" property="activityDeduction.deductionmoney"/>
	</resultMap>
	
	<sql id="activityDeductionUserColumns">
		T.id AS "id",
		T.activityid AS "activityDeduction.id",
		T.applyuserid AS "applyuserid.id",
		applyuserid.username AS "applyuserid.username",
		T.applytime AS "applytime",
		T.status AS "status",
		T.userid AS "userid.id",
		userid.username AS "userid.username",
		T.usetime AS "usetime",
		T.couponpassword AS "couponpassword",
		T.deleted AS "deleted",
		housesInfo.name AS "activityDeduction.housesInfo.name",
		activityDeduction.availabletime AS "activityDeduction.availabletime",
		activityDeduction.prestoremoney AS "activityDeduction.prestoremoney",
		activityDeduction.deductionmoney AS "activityDeduction.deductionmoney"
	</sql>
	
    
	<sql id="activityDeductionUserJoins">
	left JOIN user_info userid ON userid.id = T.userid
	left JOIN user_info applyuserid ON applyuserid.id =T.applyuserid
	left join activity_deduction activityDeduction ON T.activityid = activityDeduction.id
	left join houses_info housesInfo ON housesInfo.id = activityDeduction.housesid
	</sql>
    
	<select id="getById" resultType="ActivityDeductionUser">
		SELECT 
			<include refid="activityDeductionUserColumns"/>
		FROM activity_deduction_user T
		<include refid="activityDeductionUserJoins"/>
		WHERE T.id = #{id}
	</select>
	
	<select id="findListByPage" resultMap="ActivityDeductionUser">
		SELECT 
			<include refid="activityDeductionUserColumns"/>
		FROM activity_deduction_user T
		<include refid="activityDeductionUserJoins"/>
		<if test="condition!=null">
			<where>
				T.applyuserid = ${condition.currentUser}
				<if test="condition.model!=null">
					<if test="condition.model.activityDeduction!=null">
						AND T.activityid = '${condition.model.activityDeduction.id}'
					</if>
					<if test="condition.model.status!=null and condition.model.status!=''">
						 AND T.status = ${condition.model.status}
					</if>
				</if>
			</where>
			<if test="condition.sortType==0">
				order by T.ID DESC
			</if>
			<if test="condition.sortType==1">
				order by activityDeduction.prestoremoney DESC, T.ID DESC
			</if>
			<if test="condition.sortType==2">
				order by activityDeduction.availabletime DESC, T.ID DESC
			</if>
			<if test="condition.sortType==3">
				order by T.applytime DESC, T.ID DESC
			</if>
			<include refid="Sql.pager" />
		</if>
	</select>
	<select id="getCountByCondition" resultType="int">
		SELECT 
			count(*)
		FROM activity_deduction_user T
		<include refid="activityDeductionUserJoins"/>
		<if test="condition!=null">
			<where>
				T.applyuserid = ${condition.currentUser}
				<if test="condition.model!=null">
					<if test="condition.model.activityDeduction!=null">
						AND	T.activityid = '${condition.model.activityDeduction.id}'
					</if>
					<if test="condition.model.status!=null and condition.model.status!=''">
						AND T.status = '${condition.model.status}'
					</if>
				</if>
			</where>
		</if>
	</select>
	
	<select id="findAllList" resultType="ActivityDeductionUser">
		SELECT 
			<include refid="activityDeductionUserColumns"/>
		FROM activity_deduction_user T
		<include refid="activityDeductionUserJoins"/>
		<where>
			<if test="condition!=null">
				T.applyuserid = ${condition.currentUser}
				<if test="condition.model!=null">
					<if test="condition.model.activityDeduction!=null">
						AND	T.activityid = '${condition.model.activityDeduction.id}'
					</if>
					<if test="condition.model.status!=null and condition.model.status!=''">
						AND T.status = '${condition.model.status}'
					</if>
				</if>
			</if>
		</where>		
	</select>
	
	<insert id="insert">
	INSERT INTO activity_deduction_user (
	id,
	activityid,
	applyuserid,
	applytime,
	status,
	userid,
	usetime,
	couponpassword,
	deleted
	)VALUES (
	#{id},
	#{activityid},
	#{applyuserid.id},
	#{applytime},
	#{status},
	#{userid.id},
	#{usetime},
	#{couponpassword},
	#{deleted}
	)
		<!-- 配置Mysql主键自动增长 -->
		<selectKey resultType="int" keyProperty="id">
			select
			LAST_INSERT_ID() as value  
		</selectKey>
	</insert>
		
	 <update id="update" >
    update activity_deduction_user
    <set >
      <if test="activityid != null" >
        activityid = #{activityid},
      </if>
      <if test="applyuserid != null" >
        applyuserid = #{applyuserid.id},
      </if>
      <if test="applytime != null" >
        applytime = #{applytime},
      </if>
      <if test="status != null" >
        status = #{status},
      </if>
      <if test="userid != null" >
        userid = #{userid.id},
      </if>
      <if test="usetime != null" >
        usetime = #{usetime},
      </if>
      <if test="couponpassword != null" >
        couponpassword = #{couponpassword},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted},
      </if>
    </set>
    where id = #{id}
  </update>
	
	<update id="deleteById">
		update activity_deduction set 
			deleted=1
		WHERE id = #{id}
	</update>
	
	<select id="countByUserId" resultType="int">
	  	SELECT 
	  		count(*) 
	  	FROM activity_deduction_user T
	  	where T.userid = #{userid} 
	  	<if test="status != null">
	  		and T.status = #{status}
	  	</if>
	  </select>
	
</mapper>