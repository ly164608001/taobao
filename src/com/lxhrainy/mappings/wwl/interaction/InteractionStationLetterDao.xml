<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lxhrainy.myjz.admin.interaction.dao.IInteractionStationLetterDao">
    
	<!-- 使用resultMap来映射获得ArrayList-->
	<resultMap id="stationLetterReply" type="com.lxhrainy.myjz.admin.interaction.model.InteractionStationLetter" >
		<id property="id"  column="id"></id>
		<result property="senduser.id" column="senduser.id" />
        <result property="content" column="content" />
        <result property="sendtime" column="sendtime" />
        <result property="status" column="status" />
        <result property="houses.name" column="houses.name" />
        <result property="senduser.icon" column="senduser.icon" />
        <result property="receiveuser.id" column="receiveuser.id" />
        <result property="topicid" column="topicid" />
        <result property="readtime" column="readtime" />
        <result property="deleted" column="deleted" />
		<collection property="replyList"  ofType="InteractionStationLetter" >
			<id property="id" column="replyList.id"></id>
			<id property="topicid" column="replyList.topicid"></id>
			<result property="senduser.id" column="replyList.senduser.id" />
	        <result property="content" column="replyList.content" />
	        <result property="sendtime" column="replyList.sendtime" />
	        <result property="senduser.username" column="replyList.senduser.username" />
	        <result property="status" column="replyList.status" />
	        <result property="houses.name" column="replyList.houses.name" />
	        <result property="receiveuser.id" column="replyList.receiveuser.id" />
	        <result property="readtime" column="replyList.readtime" />
	        <result property="deleted" column="replyList.deleted" />
		</collection>
	</resultMap>
	
	<sql id="interactionStationLetterColumns">
		T.id AS "id",
		T.content AS "content",
		T.senduser AS "senduser.id",
		T.sendtime AS "sendtime",
		T.status AS "status",
		h.name AS "houses.name",
		s.icon AS "senduser.icon",
		s.username AS "senduser.username",
		r.username AS "receiveuser.username",
		T.housesid AS "houses.id",
		T.receiveuser AS "receiveuser.id",
		T.topicid AS "topicid",
		T.readtime AS "readtime",
		T.deleted AS "deleted"
	</sql>

<!-- 自关联的表要用到的sql，不然好像是会冲突？同上面一个sql字段区别，不然updateStatus会出问题 -->	
	<sql id="interactionStationLetterSelfColumns">
		T.id AS "id",
		T.content AS "content",
		T.senduser AS "senduser.id",
		T.sendtime AS "sendtime",
		T.status AS "status",
		h.name AS "houses.name",
		s.icon AS "senduser.icon",
		s.username AS "senduser.username",
		r.username AS "receiveuser.username",
		T.housesid AS "houses.id",
		T.receiveuser AS "receiveuser.id",
		T.topicid AS "topicid",
		T.readtime AS "readtime",
		T.deleted AS "deleted",
		
		L.content AS "replyList.content",
		L.sendtime AS "replyList.sendtime",
		s.username AS "replyList.senduser.username",
		L.readtime AS "replyList.readtime",
		L.senduser AS "replyList.senduser.id"
<!-- 		L.sendtime AS "replyList.sendtime", -->
<!-- 		L.status AS "replyList.status", -->
<!-- 		h.name AS "houses.name", -->
<!-- 		L.housesid AS "replyList.houses.id", -->
<!-- 		L.receiveuser AS "replyList.receiveuser.id", -->
<!-- 		L.topicid AS "replyList.topicid", -->
<!-- 		L.readtime AS "replyList.readtime", -->
<!-- 		L.deleted AS "replyList.deleted" -->
	</sql>
    
	<sql id="interactionStationLetterJoins">
	LEFT JOIN user_info s ON s.id = T.senduser
	LEFT JOIN user_info r ON r.id =T.receiveuser
	LEFT JOIN houses_info h ON h.id =T.housesid
	</sql>
	
	<sql id="interactionStationLetterSelfJoins">
	LEFT JOIN user_info s ON s.id = T.senduser
	LEFT JOIN user_info r ON r.id =T.receiveuser
	LEFT JOIN houses_info h ON h.id =T.housesid
	LEFT JOIN interaction_station_letter L ON L.topicid =T.id
	</sql>
	
    <sql id="where">
		<if test="condition!=null">
			<where>
				<if test="condition.model!=null">
					<if test="condition.model.deleted!=null">
						T.deleted = #{condition.model.deleted}
					</if>
				</if>
			</where>
		</if>
	</sql>

	<!-- 查询回复记录 -->
	<select id="selectReplyLetter" resultMap="stationLetterReply">
		SELECT 
			<include refid="interactionStationLetterSelfColumns"/>
		FROM interaction_station_letter T
			<include refid="interactionStationLetterSelfJoins"/>
			<if test="condition!=null">
				<where>
					<if test="condition.model!=null">
						<if test="condition.model.deleted!=null">
							AND	T.deleted = #{condition.model.deleted}
						</if>
						<if test="condition.model.status != null">
							AND	T.status = #{condition.model.status}
						</if>
					</if>
					<if	test="condition.senduserid != null">
						AND (T.receiveuser=#{condition.senduserid} OR T.senduser=#{condition.senduserid})
						AND T.topicid is null
					</if>
				</where>
			</if>
		order by T.ID DESC, L.ID ASC
		<include refid="Sql.pager" />
	</select>
	
    
	<select id="getById" resultType="InteractionStationLetter">
		SELECT 
			<include refid="interactionStationLetterColumns"/>
		FROM interaction_station_letter T
		<include refid="interactionStationLetterJoins"/>
		WHERE T.id = #{id}
	</select>
	
	<select id="findListByPage" resultType="InteractionStationLetter">
		SELECT 
			<include refid="interactionStationLetterColumns"/>
		FROM interaction_station_letter T
		<include refid="interactionStationLetterJoins"/>
			<if test="condition!=null">
				<where>
					<if test="condition.model!=null">
						<if test="condition.model.deleted!=null">
							AND	T.deleted = #{condition.model.deleted}
						</if>
						<if test="condition.model.status != null">
							AND	T.status = #{condition.model.status}
						</if>
					</if>
					<if	test="condition.senduserid != null" >
						<!-- 获取别人发给我的信息，即自己作为发送人的id和接收人id一样 -->
						AND T.topicid is null AND (T.receiveuser=#{condition.senduserid} OR T.senduser=#{condition.senduserid}) 
					</if>
				</where>
			</if>
			order by T.ID DESC
			<include refid="Sql.pager" />
	</select>
	
	<select id="getCountByCondition" resultType="int">
		SELECT 
			count(*)
		FROM interaction_station_letter T
		<include refid="interactionStationLetterJoins"/>
			<if test="condition!=null">
				<where>
					<if test="condition.model!=null">
						<if test="condition.model.deleted!=null">
							AND	T.deleted = #{condition.model.deleted}
						</if>
						<if test="condition.model.status != null">
							AND	T.status = #{condition.model.status}
						</if>
					</if>
					<if	test="condition.senduserid != null" >
						<!-- 获取别人发给我的信息，即自己作为发送人的id和接收人id一样 -->
						AND T.topicid is null AND (T.receiveuser=#{condition.senduserid} OR T.senduser=#{condition.senduserid}) 
					</if>
				</where>
			</if>
	</select>
	
<!-- 	根据当前用户id获得该用户的的站内信总数	 -->
	<select id="getCountByCurrentUserId" resultType="int">
		SELECT 
			count(*)
		FROM interaction_station_letter T 
		<include refid="interactionStationLetterJoins"/>
			<if test="condition!=null">
				<where>
					<if	test="condition.senduserid != null">
						AND (T.receiveuser=#{condition.senduserid} OR T.senduser=#{condition.senduserid}) AND T.topicid is null
					</if>
				</where>
			</if>
	</select>
		
	<select id="getByCurrentId" resultType="InteractionStationLetter">
		SELECT 
			<include refid="interactionStationLetterColumns"/>
		FROM interaction_station_letter T 
		<include refid="interactionStationLetterJoins"/>
		<if test="condition!=null">
			<where>
				T.senduser = #{condition.senduserid}
				<if test="condition.model!=null">
					<if test="condition.model.content!=null and condition.model.content!=''">
						AND	T.content LIKE '${condition.model.content}%'
					</if>
					<if test="condition.model.status!=null">
						AND	T.status = #{condition.model.status}
					</if>
				</if>
			</where>
			order by T.ID DESC
			<include refid="Sql.pager" />
		</if>
	</select>
	
	<select id="findAllList" resultType="InteractionStationLetter">
		SELECT 
			<include refid="interactionStationLetterColumns"/>
		FROM interaction_station_letter T
		<include refid="interactionStationLetterJoins"/>
		<include refid="where"/>	
	</select>
	
	<insert id="insert">
		INSERT INTO interaction_station_letter(
			content,
			senduser,
			sendtime,
			status,
			housesid,
			receiveuser,
			topicid,
			readtime,
			deleted
		) VALUES (
			#{content},
			#{senduser.id},
			#{sendtime},
			#{status},
			#{houses.id},
			#{receiveuser.id},
			#{topicid},
			#{readtime},
			#{deleted}
		)
		<!-- 配置Mysql主键自动增长 -->
		<selectKey resultType="int" keyProperty="id">
			select
			LAST_INSERT_ID() as value  
		</selectKey>
	</insert>
	
	<update id="update">
		UPDATE interaction_station_letter
			content = #{content}, 
			senduser = #{senduser.id}, 
			sendtime = #{sendtime}, 
			status = #{status},
			housesid = #{houses.id},
			receiveuser = #{receiveuser.id}, 
			topicid = #{topicid}, 
			readtime = #{readtime},
			deleted = #{deleted}
		WHERE id = #{id}
	</update>
	
	<update id="updateStatus">
		UPDATE interaction_station_letter
		<set>
			<if test="optionMark != null">
				status = #{optionMark},
			</if>
		</set>
		WHERE id = #{id}
	</update>
	
	
	<update id="deleteById">
		update interaction_station_letter set 
			deleted=1
		WHERE id = #{id}
	</update>
	
</mapper>