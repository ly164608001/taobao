<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lxhrainy.core.sys.dao.IUserInfoDao">
    
    <sql id="userInfoColumns">
    	T.id AS "id",
		T.username AS "username",
		T.phone AS "phone",
		T.registertime AS "registertime",
		T.lastlogintime AS "lastlogintime",
		T.loginip AS "loginip",
		T.type AS "type",
		T.status AS "status",
		T.icon AS "icon",
		T.deleted AS "deleted",
		T.memo AS "memo",
		T.updatetime AS "updatetime",
		T.password AS "password",
		T.creditscore AS "creditscore"
    </sql>
    <sql id="roleColumns">
    	GROUP_CONCAT(R.name) AS "rolenames"
    </sql>
    
	<sql id="detailInfoColumns">
		D.id AS "detailInfo.id",
		D.userid AS "detailInfo.userid",
		D.sex AS "detailInfo.sex",
		D.birthday AS "detailInfo.birthday",
		D.bloodtype AS "detailInfo.bloodtype",
		D.birthplace AS "detailInfo.birthplace",
		D.apartment AS "detailInfo.apartment",
		D.personsesc AS "detailInfo.personsesc",
		D.educationdegree AS "detailInfo.educationdegree",
		D.job AS "detailInfo.job",
		D.position AS "detailInfo.position",
		D.contactaddress AS "detailInfo.contactaddress",
		D.email AS "detailInfo.email",
		D.qq AS "detailInfo.qq",
		D.realname AS "detailInfo.realname",
		D.certificatetype AS "detailInfo.certificatetype",
		D.certificateno AS "detailInfo.certificateno",
		D.modifytime AS "detailInfo.modifytime",
		D.deleted AS "detailInfo.deleted"
	</sql>
	
	<sql id="enterpriseInfoColumns">
		E.enterprisename AS "enterprise.enterprisename",
		E.logo AS "enterprise.logo",
		E.website AS "enterprise.website",
		E.telephone AS "enterprise.telephone",
		E.location AS "enterprise.location",
		E.detailaddress AS "enterprise.detailaddress",
		E.longitude AS "enterprise.longitude",
		E.latitude AS "enterprise.latitude",
		E.enterprisedesc AS "enterprise.enterprisedesc",
		E.enterpriseculture AS "enterprise.enterpriseculture"
	</sql>
	
	<sql id="moneyColumns">
		UM.status AS "account.status"
	</sql>
	<sql id="moneyJoins">
   		LEFT JOIN user_money UM ON UM.userid = T.id
	</sql>
	
	
	<sql id="userInfoJoins">
		LEFT JOIN user_detail_info D ON D.userid = T.id
		LEFT JOIN user_enterprise_assoc ASSOC ON ASSOC.userid = T.id
		LEFT JOIN enterprise_info E ON E.id = ASSOC.enterpriseid
		LEFT JOIN sys_user_role UR ON UR.userid = T.id
		LEFT JOIN sys_role R ON R.id = UR.roleid
	</sql>
	
	<sql id="enterpriseJoins">
		LEFT JOIN user_enterprise_assoc ASSOC ON ASSOC.userid = T.id
		LEFT JOIN enterprise_info E ON E.id = ASSOC.enterpriseid
	</sql>

    
    <sql id="where">
		<if test="condition!=null">
			<where>
			    1 = 1 
				<if test="condition.model!=null">
					<if test="condition.model.deleted!=null">
						AND T.deleted = #{condition.model.deleted}
					</if>
					<if test="condition.model.type!=null">
						AND T.type = #{condition.model.type}
					</if>
					<if test="condition.model.status!=null">
						AND T.status = #{condition.model.status}
					</if>
					<if test="condition.model.username!=null and condition.model.username!=''">
						AND T.username LIKE '${condition.model.username}%'
					</if>
				</if>
			</where>
		</if>
	</sql>
	
	<select id="getById" resultType="UserInfo">
		SELECT 
			<include refid="userInfoColumns"/>
		FROM user_info T
		WHERE T.id = #{id}
	</select>
	
	<select id="getPersonInfo" resultType="UserInfo">
		SELECT 
			<include refid="userInfoColumns"/>,
			<include refid="detailInfoColumns"/>
		FROM user_info T
		LEFT JOIN user_detail_info D ON D.userid = T.id
		WHERE T.id = #{id}
	</select>
	
	<select id="getUserEnterpriseInfo" resultType="UserInfo">
		SELECT 
			<include refid="userInfoColumns"/>,
			<include refid="enterpriseInfoColumns"/>
		FROM user_info T
		<include refid="enterpriseJoins"/>
		WHERE T.id = #{id}
	</select>
	
	<select id="checkUserLogin" resultType="UserInfo">
		SELECT 
			<include refid="userInfoColumns"/>
		FROM user_info T
		WHERE 
			T.username = #{username} 
			and T.password = #{password}
			and T.channel = #{channel}
	</select>
	
	<select id="findListByPage" resultType="UserInfo">
		SELECT 
			<include refid="userInfoColumns"/>,
			<include refid="roleColumns"/>
		FROM user_info T
		<include refid="userInfoJoins"/>
		<include refid="where"/>
		group by T.ID
		order by T.ID DESC
			<include refid="Sql.pager" />
	</select>
	
	<select id="findAllList" resultType="UserInfo">
		SELECT 
			<include refid="userInfoColumns"/>
		FROM user_info T
		<include refid="userInfoJoins"/>
		<include refid="where"/>
	</select>
	
	<select id="getCountByCondition" resultType="int">
		SELECT 
			count(*)
		FROM user_info T
		<include refid="where"/>
	</select>
	
	<insert id="insert">
	    <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
	        SELECT LAST_INSERT_ID() AS id
	    </selectKey>
		INSERT INTO user_info(
			id,
			username,
			password,
			phone,
			registertime,
			lastlogintime,
			loginip,
			type,
			status,
			deleted,
			channel,
			icon,
			memo,
			updatetime,
			updateuser,
			creditscore
		) VALUES (
			#{id},
			#{username},
			#{password},
			#{phone},
			#{registertime},
			#{lastlogintime},
			#{loginip},
			#{type},
			#{status},
			#{deleted},
			#{channel},
			#{icon},
			#{memo},
			#{updatetime},
			#{updateuser.id},
			#{creditscore}
		)
	</insert>
	
	<update id="update">
		UPDATE user_info SET 	
			<if test="username !=null and username !=''">
			username = #{username},
			</if>	
			<if test="password !=null and password !=''">
			password = #{password},
			</if>	
			<if test="phone !=null and phone !=''">
			phone = #{phone},
			</if>	
			<if test="registertime !=null ">
			registertime = #{registertime},
			</if>	
			<if test="lastlogintime !=null ">
			lastlogintime = #{lastlogintime},
			</if>	
			<if test="loginip !=null and loginip !=''">
			loginip = #{loginip},
			</if>	
			<if test="type !=null">
			type = #{type},
			</if>	
			<if test="status !=null">
			status = #{status},
			</if>	
			<if test="deleted !=null ">
			deleted = #{deleted},
			</if>
			<if test="icon !=null ">
			icon = #{icon},
			</if>	
			<if test="memo !=null ">
			memo = #{memo},
			</if>	
			<if test="updatetime !=null ">
			updatetime = #{updatetime},
			</if>
			<if test="updateuser !=null and updateuser.id != null">
			updateuser = #{updateuser.id},
			</if>
			<if test="creditscore != null">
			creditscore = #{creditscore}
			</if>
			id = #{id}
		WHERE id = #{id}
	</update>
	
	<update id="updateUserStatus">
		update user_info set 
			status = #{user.status},
			<if test="user.updateuser != null and user.updateuser.id != null">
			updateuser = #{user.updateuser.id},
			</if>
			<if test="user.updatetime != null">
			updatetime = #{user.updatetime},
			</if>
			memo = #{user.memo}
		WHERE id = #{user.id}
	</update>
	
	<update id="updatePassword">
		update user_info set password = #{password}
		WHERE id = #{id}
	</update>
	
	<update id="deleteById">
		update user_info set 
			deleted=1
		WHERE id = #{id}
	</update>
	
	<select id="getByName" resultType="UserInfo">
		SELECT 
			T.id,
			T.username,
			T.phone
		FROM user_info T
		WHERE T.username = #{username}
	</select>
	
	<!--START 会员 -->
	<sql id="memberColumns">
		UI.username AS "updateuser.username",
    	UAI.certificationstatus AS "authInfo.certificationstatus"
    </sql>
    <sql id="memberJoins">
    	LEFT JOIN user_info UI ON UI.id = T.updateuser
		LEFT JOIN user_auth_info UAI ON UAI.userid = T.id
	</sql>
	<select id="findMemberListByPage" resultType="UserInfo">
		SELECT 
			<include refid="userInfoColumns"/>,
			<include refid="memberColumns"/>
		FROM user_info T
		<include refid="memberJoins"/>
		<include refid="where"/>
		order by T.ID DESC
			<include refid="Sql.pager" />
	</select>
	<select id="getMemberCountByCondition" resultType="int">
		SELECT 
			count(*)
		FROM user_info T
		<include refid="memberJoins"/>
		<include refid="where"/>
	</select>
	<!-- END 会员 -->
	
	<sql id="enterpriseColumns">
		EA.status AS "enterpriseAuth.status"
	</sql>
	<sql id="enterpriseAuthJoins">
		LEFT JOIN user_enterprise_assoc ASSOC ON ASSOC.userid = T.id
		LEFT JOIN enterprise_auth EA ON EA.enterpriseid = ASSOC.enterpriseid
	</sql>	
	<!--START 房地产商 -->
	<sql id="estateColumns">
    </sql>
    <sql id="estateJoins">
	</sql>
	<select id="findEstateListByPage" resultType="UserInfo">
		SELECT 
			<include refid="userInfoColumns"/>,
			<include refid="enterpriseColumns"/>,
			<include refid="moneyColumns"/>
		FROM user_info T
		<include refid="enterpriseAuthJoins"/>
		<include refid="moneyJoins"/>
		<include refid="where"/>
		order by T.ID DESC
			<include refid="Sql.pager" />
	</select>
	<select id="getEstateCountByCondition" resultType="int">
		SELECT 
			count(*)
		FROM user_info T
		<include refid="enterpriseAuthJoins"/>
		<include refid="moneyJoins"/>
		<include refid="where"/>
	</select>
	<!-- END 房地产商 -->
	
</mapper>