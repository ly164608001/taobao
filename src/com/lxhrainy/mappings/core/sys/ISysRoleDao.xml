<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lxhrainy.core.sys.dao.ISysRoleDao">
    
    <resultMap id="roleResult" type="SysRole">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="enname" column="enname" />
		<result property="datascope" column="datascope" />
		<result property="remarks" column="remarks" />
		<result property="useable" column="useable" />
		<collection property="menuList" ofType="SysMenu">
			<id property="id" column="menuList.id" />
		</collection>
	</resultMap>
	
    <sql id="roleColumns">
    	T.id,
    	T.name,
    	T.enname,
		T.datascope AS datascope,
		T.remarks,
		T.createuser AS "createuser.id",
		T.createtime,
		T.updateuser AS "updateuser.id",
		T.updatetime,
		T.deleted,
    	T.useable AS useable,
    	T.issys AS issys
    </sql>
    
     <sql id="roleJoins">
    </sql>
    
	<select id="getById" resultMap="roleResult">
		SELECT
			<include refid="roleColumns"/>,
			rm.menuid AS "menuList.id"
		FROM sys_role T
		LEFT JOIN sys_role_menu rm ON rm.roleid = T.id
		WHERE T.id = #{id}
	</select>
	
	<select id="getRoleidsByUser" resultType="int">
		SELECT roleid
		FROM sys_user_role T
		WHERE userid = #{userid}
	</select>
	
	<select id="getByName" resultType="SysRole">
		SELECT
			<include refid="roleColumns"/>
		FROM sys_role T
		WHERE T.name = #{name} AND T.deleted = 0
	</select>
	
	<select id="getByEnname" resultType="SysRole">
		SELECT
			<include refid="roleColumns"/>
		FROM sys_role T
		WHERE T.enname = #{enname} AND T.deleted = 0
	</select>
	
	<select id="findAllList" resultType="SysRole">
		SELECT
			<include refid="roleColumns"/>
		FROM sys_role T
		WHERE T.deleted = 0
		ORDER BY T.id
	</select>
	
	<select id="findListByPage" resultType="SysRole">
		SELECT 
			<include refid="roleColumns"/>
		FROM sys_role T
		<include refid="roleJoins"/>
		<if test="condition!=null">
			<where>
				<if test="condition.model!=null">
					<if test="condition.model.name!=null and condition.model.name!=''">
						T.name LIKE '${condition.model.name}%'
					</if>
				</if>
			</where>
			order by T.ID DESC
			<include refid="Sql.pager" />
		</if>
	</select>
	<select id="getCountByCondition" resultType="int">
		SELECT 
			count(*)
		FROM sys_role T
		<include refid="roleJoins"/>
		<if test="condition!=null">
			<where>
				<if test="condition.model!=null">
					<if test="condition.model.name!=null and condition.model.name!=''">
						T.name LIKE '${condition.model.name}%'
					</if>
				</if>
			</where>
		</if>
	</select>
	
	<insert id="insert">
		INSERT INTO sys_role(
			id, 
			name, 
			enname, 
			datascope, 
			createuser, 
			createtime, 
			updateuser, 
			updatetime, 
			remarks, 
			deleted,
			issys,
			useable
		) VALUES (
			#{id}, 
			#{name}, 
			#{enname}, 
			#{datascope}, 
			#{createuser.id}, 
			#{createtime}, 
			#{updateuser.id}, 
			#{updatetime}, 
			#{remarks}, 
			#{deleted},
			#{issys},
			#{useable}
		)
	</insert>
	<insert id="insertUserRole">
		INSERT INTO sys_user_role(
			userid,
			roleid
		) VALUES(
			#{userid}, 
			#{roleid}
		)
	</insert>
	
	<update id="update">
		UPDATE sys_role SET 
			name = #{name}, 
			enname = #{enname}, 
			datascope = #{datascope}, 
			updateuser = #{updateuser.id}, 
			updatetime = #{updatetime}, 
			remarks = #{remarks},
			issys = #{issys},
			useable = #{useable}
		WHERE id = #{id}
	</update>
	
	<delete id="deleteRoleMenu">
		DELETE FROM sys_role_menu WHERE roleid = #{id}
	</delete>
	<delete id="deleteRoleByUser">
		DELETE FROM sys_user_role WHERE userid = #{userid}
	</delete>
	
	<insert id="insertRoleMenu">
		INSERT INTO sys_role_menu(roleid, menuid)
		<foreach collection="menuList" item="menu" separator=" union all ">
			SELECT #{id}, #{menu.id} FROM dual
		</foreach>
	</insert>
	
	<update id="deleteById">
		UPDATE sys_role SET 
			deleted = 0
		WHERE id = #{id}
	</update>
	
</mapper>